#!/bin/bash
#
# Copyright 2020 Red Hat, Inc.
#
# NAME
#     lab-observe-mesh
#
# SYNOPSIS
#     lab-observe-mesh {start|finish}
#
#        start  - Deploy starter application into OpenShift Service Mesh
#        finish - Remove application project from OpenShift Service Mesh
#        grade  - Grade the lab
#
# DESCRIPTION
#     This script is used to start/finish the chapter 3 section 7 lab.
#
# CHANGELOG
#   * Wed May 11 2020 Ravi Srinivasan <ravis@redhat.com>
#   - Initial commit


PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin

# Initialize and set some variables
run_as_root='true'

# Required by the do328 shlib
this='observe-mesh'
title='Lab: Observing an OpenShift Service Mesh'

istio_project='istio-system'
istio_deployment_name='basic-install'
istio_route='istio-ingressgateway'

declare -a valid_commands=(start finish grade)

function lab_start {

  ISTIO_INGRESS_GW=''

  ocp4_print_prereq_header
  ocp4_is_cluster_up
  ocp4_check_sm_installed ${istio_project} ${istio_deployment_name}

  ocp4_print_setup_header
  ocp4_grab_lab_files

  ocp4_login_as_developer
  ocp4_new_project "${this}"
  ocp4_sm_add_projects_to_smmr "${this}"
  ocp4_print_smmr_state_for_project "${this}"
  ocp4_wait_operator_ready "${this}"

  ocp4_get_route_host_into ISTIO_INGRESS_GW "$istio_project" "istio-ingressgateway"

  ocp4_process_template_solution "${this}" "exchange-app-template.yaml" "INGRESS_GW=$ISTIO_INGRESS_GW"

  ocp4_check_exchange_app_pod_replicas "${this}"

  ocp4_print_setup_footer

}

function lab_grade {
  ocp4_print_grade_header

  ocp4_login_as_admin

  print_line
  print_line ' Verifying Lab'

  ISTIO_INGRESS_GW=''
  ocp4_get_route_host_into ISTIO_INGRESS_GW "${istio_project}" "${istio_route}"

  ocp4_pad "Check if project observe-mesh exists"
  if oc get project "${this}" -o name
  then
    print_PASS
  else
    print_FAIL
  fi

  check_live_frontend "${ISTIO_INGRESS_GW}"

  ocp4_pad "Check if exchange service is up and running"
  print_pass_fail_service_running 'observe-mesh' 'app=exchange'

  ocp4_pad "Check if currency service is up and running"
  print_pass_fail_service_running 'observe-mesh' 'app=currency'

  ocp4_pad "Check if history service is up and running"
  print_pass_fail_service_running 'observe-mesh' 'app=history'

  ocp4_pad "Check if frontend service is up and running"
  print_pass_fail_service_running 'observe-mesh' 'app=frontend'

  print_line
  ocp4_logout

  ocp4_print_grade_footer
}

function lab_finish {

  ocp4_print_cleanup_header

  ocp4_cleanup_lab_files
  ocp4_login_as_admin
  ocp4_sm_clean_smmr
  ocp4_delete_project "${this}"
  ocp4_logout

  ocp4_print_cleanup_footer

}

function check_live_frontend {
  local frontend_url="$1/frontend"

  ocp4_pad "Checking that the frontend is accessible"
  if curl -s ${frontend_url} | grep "DO328"; then
    print_PASS
  else
    print_FAIL
  fi
}

############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
