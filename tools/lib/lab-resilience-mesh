#!/bin/bash
#
# Copyright 2020 Red Hat, Inc.
#
# NAME
#     lab-resilience-mesh - lab script used to add resilience to services deployed in Red Hat OpenShift Service Mesh
#
# SYNOPSIS
#     lab-resilience-mesh {start|grade|finish}
#
#        start - verify prerequisites for the lab
#        grade - perform evaluation steps on the deployed application
#        finish - removes the exposed services and related resources from OpenShift Service Mesh
#
# DESCRIPTION
#     This script is used to start, grade or conclude the chapter 7 lab.
#
# CHANGELOG
#   * Tue May 26 2020 Pablo Solar Vilariño <psolarvi@redhat.com>
#   - Added grading
#   * Mon May 25 2020 Pablo Solar Vilariño <psolarvi@redhat.com>
#   - Initial commit
#
# REFERENCES
#     Applications
#         https://github.com/RedHatTraining/DO328-apps/tree/master/python-flask-gossip
#         https://github.com/RedHatTraining/DO328-apps/tree/master/exchange-application

PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin

# Initialize and set some variables
run_as_root='true'

# Required by the do328 shlib
this='resilience-mesh'
title='Lab: Building Resilient Services'

istio_project='istio-system'
istio_deployment_name='basic-install'

declare -a valid_commands=(start grade finish)

function lab_start {

  ISTIO_INGRESS_GW=''
  NEWS_URL=''

  ocp4_print_prereq_header

  ocp4_is_cluster_up
  ocp4_check_sm_installed
  ocp4_grab_lab_files

  ocp4_login_as_developer

  ocp4_get_route_host_into ISTIO_INGRESS_GW "${istio_project}" "istio-ingressgateway"

  # deploy external app
  ocp4_new_project "${this}-news"
  ocp4_process_template_solution "${this}-news" "news-template.yaml" "DATA_FOLDER=error" "ERROR_RESPONSE=503"
  ocp4_get_route_url_into NEWS_URL "${this}-news" "news"

  # deploy course app
  ocp4_new_project "${this}"
  ocp4_sm_add_projects_to_smmr "${this}"
  ocp4_wait_operator_ready "${this}" "servicemeshoperator"
  ocp4_print_smmr_state_for_project "${this}"
  ocp4_process_template_solution "${this}" "exchange-template.yaml" "INGRESS_GW=${ISTIO_INGRESS_GW}" "NEWS_ENDPOINT=http://${NEWS_URL}" "REACT_APP_NEWS_ENABLED=true" "FRONTEND_TAG=3.1" "EXCHANGE_TAG=2.0" "CURRENCIES_TAG=2.0" "ERROR_DIVISOR=3"

  ocp4_check_exchange_app_pod_replicas "${this}"

  ocp4_print_setup_header
  ocp4_print_setup_footer
}

function lab_grade {

  ocp4_print_grade_header

  ocp4_login_as_admin

  print_line
  print_line ' Verifying LAB solution:'

  verify_egress_service_entry
  verify_circuit_breaker
  verify_retries
  verify_connection_pool

  print_line
  ocp4_logout

  ocp4_print_grade_footer
}

function lab_finish {

  ocp4_print_cleanup_header

  ocp4_cleanup_lab_files
  ocp4_login_as_admin
  ocp4_change_egress_config_to ""
  ocp4_sm_clean_smmr

  ocp4_delete_project "${this}"
  ocp4_delete_project "${this}-news"

  ocp4_logout

  ocp4_print_cleanup_footer
}

function object_meets_criteria {

  local selector="${1}"
  local path="${2}"
  local requirements="${3}"

  local state=$(oc get ${selector} -n ${this} -o=jsonpath=${path})

  [ "${requirements}" == "${state}" ]

  return $?
}

function verify_egress_service_entry {

  NEWS_HOST=`oc get route/news -n "${this}-news" -o=jsonpath='{.spec.host}'`

  ocp4_pad "Verifying service entry for the news service"

  local pathSelector='{.spec.hosts}{"|"}{.spec.ports..number}{"|"}{.spec.ports..protocol}{"|"}{.spec.resolution}{"|"}{.spec.location}'
  local requirements="[${NEWS_HOST}]|80|HTTP|DNS|MESH_EXTERNAL"

  if object_meets_criteria "serviceentry/news-se" "${pathSelector}" "${requirements}"
  then
    print_PASS
  else
    print_FAIL
  fi
}

function verify_circuit_breaker {
  NEWS_HOST=`oc get route/news -n "${this}-news" -o=jsonpath='{.spec.host}'`

  ocp4_pad "Verifying circuit breaker for the news service"

  local pathSelector='{.spec.host}{"|"}{.spec.trafficPolicy.outlierDetection.consecutiveErrors}{"|"}{.spec.trafficPolicy.outlierDetection.interval}{"|"}{.spec.trafficPolicy.outlierDetection.baseEjectionTime}{"|"}{.spec.trafficPolicy.outlierDetection.maxEjectionPercent}'
  local requirements="${NEWS_HOST}|2|5s|10s|100"

  if object_meets_criteria "destinationrule/news-circuit" "${pathSelector}" "${requirements}"
  then
    print_PASS
  else
    print_FAIL
  fi
}

function verify_retries {
  ocp4_pad "Verifying retries for the currency service"

  local pathSelector='{.spec.hosts}{"|"}{.spec.http..retries.attempts}{"|"}{.spec.http..retries.perTryTimeout}{"|"}{.spec.http..retries.retryOn}'
  local requirements="[currency]|4|1s|5xx"

  if object_meets_criteria "virtualservice/currency-retries" "${pathSelector}" "${requirements}"
  then
    print_PASS
  else
    print_FAIL
  fi
}

function verify_connection_pool {
  ocp4_pad "Verifying connection pool settings for the frontend service"

  local pathSelector='{.spec.host}{"|"}{.spec.trafficPolicy.connectionPool.http.http1MaxPendingRequests}{"|"}{.spec.trafficPolicy.connectionPool.http.maxRequestsPerConnection}{"|"}{.spec.trafficPolicy.connectionPool.tcp.maxConnections}'
  local requirements="frontend|5|10|5"

  if object_meets_criteria "destinationrule/frontend-pool" "${pathSelector}" "${requirements}"
  then
    print_PASS
  else
    print_FAIL
  fi
}

############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
