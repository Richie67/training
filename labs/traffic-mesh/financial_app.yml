apiVersion: v1
kind: Template
metadata:
  name: financial-app
  annotations:
    description: "Financial sample application for Red Hat Training"
objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: frontend-cm
    data:
      GW_ADDR: ${INGRESS_GW}/exchange
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: frontend-v2
    labels:
      app: frontend
      version: v2
    spec:
      selector:
        matchLabels:
          app: frontend
          version: v2
      replicas: 1
      template:
        metadata:
          labels:
            app: frontend
            version: v2
          annotations:
            sidecar.istio.io/inject: "true"
        spec:
          containers:
            - name: frontend
              image: quay.io/redhattraining/ossm-frontend:2.0
              imagePullPolicy: Always
              ports:
                - containerPort: 3000
              env:
                - name: REACT_APP_GW_ENDPOINT
                  valueFrom:
                    configMapKeyRef:
                      name: frontend-cm
                      key: GW_ADDR
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: frontend
      name: frontend
    spec:
      ports:
      - port: 3000
        protocol: TCP
        targetPort: 3000
      selector:
        app: frontend
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: history-v1
    labels:
      app: history
      version: v1
    spec:
      selector:
        matchLabels:
          app: history
          version: v1
      replicas: 1
      template:
        metadata:
          labels:
            app: history
            version: v1
          annotations:
              sidecar.istio.io/inject: "true"
        spec:
          containers:
            - name: history
              image: quay.io/redhattraining/ossm-history:1.0
              imagePullPolicy: Always
              ports:
                - containerPort: 8080
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: history
      name: history
    spec:
      ports:
      - port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: history
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: currency-v1
    labels:
      app: currency
      version: v1
    spec:
      selector:
        matchLabels:
          app: currency
          version: v1
      replicas: 1
      template:
        metadata:
          labels:
            app: currency
            version: v1
          annotations:
              sidecar.istio.io/inject: "true"
        spec:
          containers:
            - name: currency
              image: quay.io/redhattraining/ossm-currencies:1.0
              imagePullPolicy: Always
              ports:
                - containerPort: 5000
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: currency
      name: currency
    spec:
      ports:
      - port: 5000
        protocol: TCP
        targetPort: 5000
      selector:
        app: currency
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: exchange-v2
    spec:
      selector:
        matchLabels:
          app: exchange
          version: v2
      replicas: 1
      template:
        metadata:
          labels:
            app: exchange
            version: v2
          annotations:
            sidecar.istio.io/inject: "true"
        spec:
          containers:
            - name: exchange
              image: quay.io/redhattraining/ossm-exchange:2.0
              imagePullPolicy: Always
              ports:
                - containerPort: 8080
              env:
                - name: NEWS_ENDPOINT
                  value: http://${NEWS_ENDPOINT}
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: exchange
      name: exchange
    spec:
      ports:
      - port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: exchange
  - kind: VirtualService
    apiVersion: networking.istio.io/v1alpha3
    metadata:
      name: exchange-vs
    spec:
      hosts:
        - "*"
      gateways:
        - traffic-mesh-gateway
      http:
        - match:
            - uri:
                prefix: /exchange
          rewrite:
            uri: /
          route:
            - destination:
                host: exchange
                port:
                  number: 8080
parameters:
  - name: INGRESS_GW
    description: "The address of the Istio Ingress Gateway, to be used for the external exchange service"
    required: true
  - name: NEWS_ENDPOINT
    description: "The address the news service, without the protocol section"
    required: true
    value: "http://feed-news.apps-crc.testing"
